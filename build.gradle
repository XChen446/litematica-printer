plugins {
	id 'fabric-loom' version '1.2-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url = 'https://masa.dy.fi/maven' }
	maven { url = "https://www.cursemaven.com" }
	maven {
		name = "CottonMC"
		url = "https://server.bbkr.space/artifactory/libs-release"
	}

	maven { url = 'https://maven.fabricmc.net' }
	maven {url = "https://maven.kyrptonaught.dev"}
	maven { url = "https://maven.terraformersmc.com/releases"}

	maven { url = "https://maven.shedaniel.me/" }

	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "fi.dy.masa.malilib:malilib-fabric-${project.malilib_version}"
	modImplementation "curse.maven:litematica-${project.litematica_projectid}:${project.litematica_fileid}"
	modImplementation "curse.maven:tweakeroo-${project.tweakeroo_projectid}:${project.tweakeroo_fileid}"
	modImplementation "curse.maven:carpet-${project.carpet_projectid}:${project.carpet_fileid}"

	modImplementation "curse.maven:chest-tracker-${project.chesttracker_projectid}:${project.chesttracker_fileid}"
	modImplementation "curse.maven:where-is-it-${project.whereisit_projectid}:${project.whereisit_fileid}"
//	modImplementation "curse.maven:cloth-config-${project.clothconfig_projectid}:${project.clothconfig_fileid}"
	modImplementation "curse.maven:cloth-config-${project.clothapi_projectid}:${project.clothapi_fileid}"
	modApi "com.terraformersmc:modmenu:3.2.5"
	modApi ("me.shedaniel.cloth:cloth-config-fabric:6.4.90"){
		exclude(group: "net.fabricmc.fabric-api")
	}
	modApi "me.shedaniel.cloth.api:cloth-api:${project.cloth_api_version}"
	modApi "me.shedaniel:RoughlyEnoughItems-fabric:8.3.594"
	modApi "dev.architectury:architectury-fabric:4.11.93"

//	modImplementation "curse.maven:cloth-api-${project.clothapi_projectid}:${project.clothapi_fileid}"
	modImplementation "io.github.cottonmc:LibGui:${project.libgui_version}"
//	include "io.github.cottonmc:LibGui:${project.libgui_version}"


	modImplementation "curse.maven:quick-shulker-${project.quickshulker_projectid}:${project.quickshulker_fileid}"
	modImplementation 'net.kyrptonaught:kyrptconfig:1.4.6-1.18'
//	include 'net.kyrptonaught:kyrptconfig:1.4.6-1.18'
	modImplementation 'net.kyrptonaught:shulkerutils:1.0.4-1.18'

	// Uncomment the following line to enable the deprecated Fabric API modules.
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	archivesBaseName = project.archives_base_name+"-"+ project.minecraft_version +"-"+new Date().format("yyyyMMdd", TimeZone.getTimeZone("GMT+08:00"))
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
loom{
	runConfigs.named("client") {
		programArgs([
				"--width",
				"1280",
				"--height",
				"720",
		])
		runDir("run")
	}
}